//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-android v0.7
//
package com.appetite;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.MotionEvent;

import com.amazonaws.mobile.AWSMobileClient;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBMapper;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.model.AttributeValue;
import com.amazonaws.services.dynamodbv2.model.ScanRequest;
import com.amazonaws.services.dynamodbv2.model.ScanResult;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.CountDownLatch;

/**
 * Splash Activity is the start-up activity that appears until a delay is expired
 * or the user taps the screen.  When the splash activity starts, various app
 * initialization operations are performed.
 */
public class ActivitySplash extends Activity {
    private final static String LOG_TAG = ActivitySplash.class.getSimpleName();
    private final CountDownLatch timeoutLatch = new CountDownLatch(1);
    private final String tableName = "dima-mobilehub-516910810-RecipeName";
    private ArrayList<String> recipeNameList = new ArrayList<String>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        Log.d(LOG_TAG, "onCreate");

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash);

        Thread thread2 = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    AmazonDynamoDB dynamoDBClient = AWSMobileClient.defaultMobileClient().getDynamoDBClient();
                    DynamoDBMapper mapper = new DynamoDBMapper(dynamoDBClient);
                    //Retrieve the name of the recipies from the DB, is not done anymore if already present
                    //Are saved the sharedPreferences for the search
                    ScanRequest scanRequest = new ScanRequest().withTableName(tableName);
                    ScanResult result = dynamoDBClient.scan(scanRequest);
                    for (Map<String, AttributeValue> item : result.getItems()) {
                        String name = item.get("Name").getS();
                        recipeNameList.add(name);
                    }
                    //Saving it in the shared preferences, they will be used to search recipies
                    SharedPreferences sharedPref = getSharedPreferences("recipeNameList", Context.MODE_PRIVATE);
                    SharedPreferences.Editor editor = sharedPref.edit();
                    Set<String> r = new HashSet<String>(recipeNameList);
                    editor.putStringSet("recipeNameList", r);
                    editor.apply();
                } catch (RuntimeException e) {
                    Log.e("ActivitySplash", "HTTP exception");
                }
            }
        });
        thread2.start();

        final Thread thread = new Thread(new Runnable() {
            public void run() {
                // Wait for the splash timeout.
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException e) { }

                // Expire the splash page delay.
                timeoutLatch.countDown();
            }
        });
        thread.start();
        goMain();
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        // Touch event bypasses waiting for the splash timeout to expire.
        timeoutLatch.countDown();
        return true;
    }

    /**
     * Starts an activity after the splash timeout.
     * @param intent the intent to start the activity.
     */
    private void goAfterSplashTimeout(final Intent intent) {
        final Thread thread = new Thread(new Runnable() {
            public void run() {
                // wait for the splash timeout expiry or for the user to tap.
                try {
                    timeoutLatch.await();
                } catch (InterruptedException e) {
                }

                ActivitySplash.this.runOnUiThread(new Runnable() {
                    public void run() {
                        startActivity(intent);
                        // finish should always be called on the main thread.
                        finish();
                    }
                });
            }
        });
        thread.start();
    }

    /**
     * Go to the main activity after the splash timeout has expired.
     */
    protected void goMain() {
        Log.d(LOG_TAG, "Launching Main Activity...");
        goAfterSplashTimeout(new Intent(this, ActivityMain.class));
    }
}
